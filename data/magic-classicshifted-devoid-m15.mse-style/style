mse version: 2.1.2
game: magic
short name: M15 CS Clear
full name: Classicshifted Clear
icon: card-sample.png
position hint: 280

version: 2024-08-01
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-modules.mse-include
	version: 2024-05-20
depends on:
	package: magic-classicshifted-stamps-m15.mse-include
	version: 2020-08-28
depends on:
	package: magic-classicshifted-icons-m15.mse-include
	version: 2020-08-28
depends on:
	package: magic-classicshifted-shared-m15.mse-include
	version: 2020-08-28
depends on:
	package: magic-classicshifted-blends-m15.mse-include
	version: 2020-08-06
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23

card width: 750
card height: 1046
card dpi: 300

############################################################## Extra scripts
init script:
	nameline_offset_top_1 := { if is_crowned() then -7 else -16 }
	casting_cost_offset_top_1 := { 1 }
	transform_symbol_offset_left_1 := { 18 }
	transform_symbol_offset_top_1 := { 14 }
	transform_symbol_offset_width_1 := { -28 }
	transform_symbol_offset_height_1 := { -28 }
	name_transform_symbol_offset_left_1 := { -18 }
	card_symbol_offset_left_1 := { -12 }
	card_symbol_offset_top_1 := { 5 }
	card_symbol_offset_width_1 := { -6 }
	card_symbol_offset_height_1 := { -6 }
	name_card_symbol_offset_left_1 := { 12 }
	
	typeline_offset_top_1 := { 3 }
	typeline_offset_left_1 := { -2 }
	rarity_offset_left_1 := { 4 }
	
	card_stamp_offset_top_1 := { -2 }
	card_stamp_offset_height_1 := { 12 }
	card_stamp_offset_left_1 := { -6 }
	card_stamp_offset_width_1 := { 12 }
	
	swap_fonts_pt_default :=
	[
		name: {"Beleren Bold"},
		size: {32.0},
		color: {"white"},
		vertical: {0},
		italic: {"Beleren Bold"}
	]
	swap_fonts_body_default :=
	[
		name: {"MPlantin"},
		size: {28.0},
		color: {"black"},
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {26.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {28.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	template_prefix :=
	[
		card:			{ (if styling.transformation_reminder then "transformation" else if lang_setting("is_artifact")(card.super_type) then "artifact" else "card") + (if is_stamped() then "/" else "_nonstamp/") }
		identity:		{ "/magic-modules.mse-include/indicators/" }
		crown:			{ "/magic-classicshifted-shared-m15.mse-include/" + (if lang_setting("is_artifact")(card.super_type) then "artifact_crown/" else "crown/") }
	]
	template_suffix :=
	[
		card:			"card.jpg"
		identity:		"identity.png"
		crown:			"crown.png"
	]
	template :=			{ template_prefix[type]() + input + template_suffix[type] }
	land_template :=	{ template_prefix[type]() + (if input == "a" then "c" else input) + "l" + template_suffix[type] }
	
	card_crown :=		{ color_background(type:"crown", base_hybrid:card_hybrid) }
	
	is_crowned := { styling.legend_crown == "yes" or (styling.legend_crown == "if legendary" and lang_setting("is_legendary")(card.super_type)) }
	is_nyx := { styling.nyx_frame == "yes" or (styling.nyx_frame == "if enchantment" and lang_setting("is_nyx")(card.super_type)) }
	is_vehicle := { styling.vehicle_frame == "yes" or (styling.vehicle_frame == "if vehicle" and lang_setting("is_vehicle")(card.sub_type)) }
	is_miracle := { styling.miracle_frame == "yes" or (styling.miracle_frame == "if miracle" and lang_setting("is_miracle")(card.text)) }
	has_identity := { styling.color_indicator_dot }
	has_identity_2 := { false }
	has_identity_3 := { false }
	
	normal_custom_stamp := custom_stamp
	custom_stamp :=
	{
		if styling.custom_stamp_color == "use normal custom stamp" then normal_custom_stamp() else
		"/magic-classicshifted-stamps-m15.mse-include/stamp/" + styling.custom_stamp_color + "-stamp.png"
	}
	
	chop_top :=			{ split := split_comma(styling.chop_text_box); if length(split) > 0 and split.0 != "" then clamp(split.0, maximum: 500, minimum: -500) else 0 }
	chop_bot :=			{ split := split_comma(styling.chop_text_box); if length(split) > 1 and split.1 != "" then clamp(split.1, maximum: 500, minimum: -500) else 0 }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" and split.0 != "-" then clamp(split.0, maximum:1500, minimum:-500) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" and split.1 != "-" then clamp(split.1, maximum:2000, minimum:-500) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" and split.2 != "-" then clamp(split.2, maximum:1500, minimum:0) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" and split.3 != "-" then clamp(split.3, maximum:2000, minimum:0) else 0 }

############################################################## Extra style options
styling field:
	type:			text
	name:			popout art coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch art to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no

include file: /magic-modules.mse-include/texts/styling_fields

styling field:
	type:			choice
	name:			legend crown
	description:	Use the legend crown?
	choice:			yes
	choice:			if legendary
	choice:			no
	initial:		if legendary
styling field:
	type:			choice
	name:			vehicle frame
	description:	Use the vehicle frame overlay?
	choice:			yes
	choice:			if vehicle
	choice:			no
	initial:		if vehicle
styling field:
	type:			choice
	name:			nyx frame
	description:	Use the nyx frame overlay?
	choice:			yes
	choice:			if enchantment
	choice:			no
	initial:		if enchantment
styling field:
	type:			choice
	name:			miracle frame
	description:	Use the miracle frame overlay?
	choice:			yes
	choice:			if miracle
	choice:			no
	initial:		if miracle

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/indicators/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			choice
	name:			custom stamp color
	description:	Use the following color for the custom stamp
	include file:	/magic-classicshifted-stamps-m15.mse-include/stamp-names
	choice:			use normal custom stamp
styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

include file: /magic-modules.mse-include/symbol-fonts/styling_fields

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/separators/card_fields

include file: /magic-modules.mse-include/namelines/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

card style:
	############################# Image
	image:
		left:				{ if styling.stretch_art_to_whole_card then 0						else if is_crowned()	then 11		else 29 }
		top:				{ if styling.stretch_art_to_whole_card then 0						else if is_crowned()	then 15		else 30 }
		right:				{ if styling.stretch_art_to_whole_card then stylesheet.card_width	else if is_crowned()	then 739	else 721 }
		bottom:				{ if styling.stretch_art_to_whole_card then stylesheet.card_height	else if is_crowned()	then 971	else 971 }
		z index:			1
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1000
	
	############################# Text box
	text:
		left:				66
		top:				{ 667 + chop_top() + (if is_stamped() then 4 else 0) + body_font_vertical() }
		right:				684
		bottom:				{ 951 - chop_bot() - (if is_stamped() then 8 else 0) }
		z index:			900
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if
				(
					styling.center_text == "short text only" and
					not contains(match:"\n", card.rule_text) and
					to_text(card.flavor_text) == "" and
					card_style.text.content_lines <= 2
				)
				or	styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		7
			color:				{ body_font_color() }
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		7
	
	############################# PT
	pt:
		left:				574
		top:				{ 935 + pt_font_vertical() }
		width:				119
		height:				60
		z index:			910
		alignment: center middle shrink-overflow
		font:
			name:				{ pt_font() }
			size:				{ pt_font_size() }
			color:				{ pt_font_color() }
			separator color:	red
			shadow color:			rgb(0,0,0)
			shadow displacement x:	2
			shadow displacement y:	2

############################################################## Extra card fields
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: miracleoverlay
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: nyxoverlay
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: vehicleoverlay
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: devoid card mask
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: devoid frame
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: devoid frame 2
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: devoid textbox
	editable: false
	save value: false
	choice: white
extra card style:
	nyxoverlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			5
		visible:			{ is_nyx() }
		render style:		image
		image:				{ if is_crowned() then set_combine(input: "/magic-classicshifted-shared-m15.mse-include/nyx/nyxmask-crown.png", combine: "add") else set_combine(input: "/magic-classicshifted-shared-m15.mse-include/nyx/nyxmask.png", combine: "add") }
	vehicleoverlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			6
		visible:			{ is_vehicle() }
		render style:		image
		image:				/magic-classicshifted-shared-m15.mse-include/vehicle/vehiclerails.png
	miracleoverlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			7
		visible:			{ is_miracle() }
		render style:		image
		image:				{ if is_crowned() then set_alpha(set_combine(input: "/magic-classicshifted-shared-m15.mse-include/miracle/miracle-crown.png", combine: "add"), alpha:0.6) else set_alpha(set_combine(input: "/magic-classicshifted-shared-m15.mse-include/miracle/miracle.png", combine: "add"), alpha:0.6) }
	pt box:
		left:				554
		top:				930
		width:				160
		height:				80
		z index:			19
		visible:			{ card.pt != "" }
		render style:		image
		image:				/magic-classicshifted-shared-m15.mse-include/power-toughness.png
	devoid card mask:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1
		render style:		image
		image:				{ image := if is_crowned() then "masks/devoid_image_mask_crown.png" else "masks/devoid_image_mask.png"; set_combine(image, combine: "multiply") }
	devoid frame:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			2
		render style:		image
		image:				{ image := if is_crowned() then "masks/devoid_crown.jpg" else "masks/devoid.jpg"; set_combine(image, combine: "multiply") }
		mask:				{ if is_crowned() then "masks/devoid_mask_crown.png" else "masks/devoid_mask.png" }
	devoid frame 2:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			2
		render style:		image
		image:				{ mask := if is_crowned() then "masks/devoid_screen_crown.jpg" else "masks/devoid_screen.jpg"; set_alpha(set_combine(mask, combine: "screen"), alpha:0.2) }
		mask:				{ if is_crowned() then "masks/devoid_mask_crown.png" else "masks/devoid_mask.png" }
	devoid textbox:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			2
		render style:		image
		image:				{ set_alpha(set_combine("masks/devoid_screen.jpg", combine: "screen"), alpha:0.75) }
		mask:				masks/devoid_textbox_mask.png
