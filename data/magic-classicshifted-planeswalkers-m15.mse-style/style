mse version: 2.1.2
game: magic
short name: M15 CS Walker
full name: Classicshifted Walker
icon: card-sample.png
position hint: 280

version: 2024-08-01
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-modules.mse-include
	version: 2024-05-20
depends on:
	package: magic-classicshifted-stamps-m15.mse-include
	version: 2020-08-28
depends on:
	package: magic-classicshifted-shared-m15.mse-include
	version: 2020-08-28
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23

card width: 750
card height: 1046
card dpi: 300

############################################################## Extra scripts
init script:
	swap_fonts_pt_default :=
	[
		name: {"Beleren Bold"},
		size: {32.0},
		color: {"white"},
		vertical: {0},
		italic: {"Beleren Bold"}
	]
	swap_fonts_body_default :=
	[
		name: {"MPlantin"},
		size: {28.0},
		color: {"black"},
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {26.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {28.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	template_prefix :=
	[
		card:			{ (if is_tall() then "walker_tall" else "walker") + (if is_stamped() then "/" else "_nonstamp/") }
		identity:		{ "/magic-modules.mse-include/indicators/" }
		crown:			{ "/magic-classicshifted-shared-m15.mse-include/crown/" }
	]
	template_suffix :=
	[
		card:			"walker.png"
		identity:		"identity.png"
		crown:			"crown.png"
	]
	template :=			{ template_prefix[type]() + input + template_suffix[type] }
	land_template :=	{ template_prefix[type]() + (if input == "a" then "c" else input) + "l" + template_suffix[type] }
	
	card_crown := { color_background(type:"crown", base_hybrid:card_hybrid) }
	
	is_tall := { styling.tall_frame }
	is_clear :=
	{
		styling.clear_frame == "yes" or
		(
			styling.clear_frame == "if colorless" and
			not lang_setting("is_artifact")(card.super_type) and
			not lang_setting("is_land")(card.super_type) and
			not contains(card.card_color, match: "white") and
			not contains(card.card_color, match: "blue") and
			not contains(card.card_color, match: "black") and
			not contains(card.card_color, match: "red") and
			not contains(card.card_color, match: "green") and
			not contains(card.card_color, match: "land") and
			not contains(card.card_color, match: "artifact") and
			not contains(card.card_color, match: "multicolor")
		)
	}
	is_crowned := { styling.legend_crown == "yes" or (styling.legend_crown == "if legendary" and lang_setting("is_legendary")(card.super_type)) }
	is_nyx := { styling.nyx_frame == "yes" or (styling.nyx_frame == "if enchantment" and lang_setting("is_nyx")(card.super_type)) }
	is_vehicle := { styling.vehicle_frame == "yes" or (styling.vehicle_frame == "if vehicle" and lang_setting("is_vehicle")(card.sub_type)) }
	is_miracle := { styling.miracle_frame == "yes" or (styling.miracle_frame == "if miracle" and lang_setting("is_miracle")(card.text)) }
	has_identity := { styling.color_indicator_dot }
	has_identity_2 := { false }
	has_identity_3 := { false }
	
	normal_custom_stamp := custom_stamp
	custom_stamp :=
	{
		if styling.custom_stamp_color == "use normal custom stamp" then normal_custom_stamp() else
		"/magic-classicshifted-stamps-m15.mse-include/stamp/" + styling.custom_stamp_color + "-stamp.png"
	}
	
	chop_top :=			{ split := split_comma(styling.chop_text_box); if length(split) > 0 and split.0 != "" then clamp(split.0, maximum: 500, minimum: -500) else 0 }
	chop_bot :=			{ split := split_comma(styling.chop_text_box); if length(split) > 1 and split.1 != "" then clamp(split.1, maximum: 500, minimum: -500) else 0 }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" and split.0 != "-" then clamp(split.0, maximum:1500, minimum:-500) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" and split.1 != "-" then clamp(split.1, maximum:2000, minimum:-500) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" and split.2 != "-" then clamp(split.2, maximum:1500, minimum:0) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" and split.3 != "-" then clamp(split.3, maximum:2000, minimum:0) else 0 }
	
	include file: /magic-modules.mse-include/loyalty/init_script
	
	loyalty_textbox_mask_1 :=
	{
		(if is_stamped() then "masks/" else "masks_nonstamp/") +
		(if is_tall() then "textbox_mask_tall.png" else "textbox_mask.png")
	}
	
	loyalty_textbox_background_image := { "" }
	
	card_mask :=
	{
		alpha := get_alpha_percentage(styling.textbox_opacity_percentage, default: 70)
		shade := 255*alpha
		mask :=	(if is_stamped() then "masks/" else "masks_nonstamp/") +
				(if is_tall() then "frame_alpha_mask_tall.png" else "frame_alpha_mask.png")
		recolor_image(mask, color: rgb(shade, shade, shade))
	}

############################################################## Extra style options

styling field:
	type:			text
	name:			popout art coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch art to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no

include file: /magic-modules.mse-include/loyalty/styling_fields

include file: /magic-modules.mse-include/texts/styling_fields

styling field:
	type:			boolean
	name:			transformation reminder
	description:	add transformation notch and p/t
	initial:		no
styling field:
	type:			choice
	name:			legend crown
	description:	Use the legend crown?
	choice:			yes
	choice:			if legendary
	choice:			no
	initial:		if legendary
styling field:
	type:			boolean
	name:			tall frame
	description:	Use a taller frame with more space for abilities?
	initial:		no
styling field:
	type:			choice
	name:			clear frame
	description:	Use a see-through frame?
	choice:			yes
	choice:			if colorless
	choice:			no
	initial:		if colorless
styling field:
	type:			choice
	name:			vehicle frame
	description:	Use the vehicle frame overlay?
	choice:			yes
	choice:			if vehicle
	choice:			no
	initial:		if vehicle
styling field:
	type:			choice
	name:			nyx frame
	description:	Use the nyx frame overlay?
	choice:			yes
	choice:			if enchantment
	choice:			no
	initial:		if enchantment
styling field:
	type:			choice
	name:			miracle frame
	description:	Use the miracle frame overlay?
	choice:			yes
	choice:			if miracle
	choice:			no
	initial:		if miracle

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/indicators/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			choice
	name:			custom stamp color
	description:	Use the following color for the custom stamp
	include file:	/magic-classicshifted-stamps-m15.mse-include/stamp-names
	choice:			use normal custom stamp
styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

include file: /magic-modules.mse-include/symbol-fonts/styling_fields

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/namelines/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

include file: /magic-modules.mse-include/information/card_fields

card style:
	############################# Background stuff
	card color:
		left:				156
		top:				168
		width:				2976
		height:				4152
		z index:			2
		popup style:		in place
		render style:		image
		image:				{ card_background() }
		mask:				{ card_mask() }
	
	############################# Image
	image:
		left:				356
		top:				{ if styling.crown_overlay and contains(card.type, match:"Legendary") then 568 else 548 }
		width:				2581
		height:				{ if styling.crown_overlay and contains(card.type, match:"Legendary") then 3480 else 3500 }
		z index:			1
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1000
	
	############################# Text box
	text:
		# left: 660
		left: 385.57
		width: 2530
		top: { if has_four_abilities() then 2506 else 2780.3 }
		height: { if has_four_abilities() then 1416 else 1164 }
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: {if styling.text_size == "auto" then 110.8 else styling.text_size}
			scale down to: 40
			color: { if has_four_abilities() then rgba(0,0,0,0) else "black" }
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: {if styling.text_size == "auto" then 110.8 else styling.text_size}
		paragraph height: 400
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 21
		mask: { if card.loyalty_cost_1 == "" then "text_mask_static.png" else "text_mask_nostatic.png"}
		padding left:   47.5
		padding right:  31.66
		line height hard: 1.2
		line height line: 1.5
		line height soft: { if has_four_abilities() then 0.895 else 0.9 }
		line height hard max: 1.3
		line height line max: 1.6

############################################################## Extra card fields
extra card field:
	type: choice
	name: crownoverlay
	editable: false
	save value: false
	script: card.card_color
	choice: white
extra card field:
	type: choice
	name: miracleoverlay
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: nyxoverlay
	editable: false
	save value: false
	choice: white
extra card style:
	crownoverlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				136
		z index:			4
		visible:			{ is_crowned() and not is_clear() }
		render style:		image
		image:				{ card_crown() }
	nyxoverlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			5
		visible:			{ is_nyx() }
		render style:		image
		image:				{ if is_crowned() then set_combine(input: "/magic-classicshifted-shared-m15.mse-include/nyx/nyxmask-crown.png", combine: "add") else set_combine(input: "/magic-classicshifted-shared-m15.mse-include/nyx/nyxmask.png", combine: "add") }
	vehicleoverlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			6
		visible:			{ is_vehicle() }
		render style:		image
		image:				/magic-classicshifted-shared-m15.mse-include/vehicle/vehiclerails.png
	miracleoverlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			7
		visible:			{ is_miracle() }
		render style:		image
		image:				{ if is_crowned() then set_alpha(set_combine(input: "/magic-classicshifted-shared-m15.mse-include/miracle/miracle-crown.png", combine: "add"), alpha:0.6) else set_alpha(set_combine(input: "/magic-classicshifted-shared-m15.mse-include/miracle/miracle.png", combine: "add"), alpha:0.6) }
